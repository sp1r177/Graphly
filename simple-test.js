// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
console.log('üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...\n');

// –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
const testData = {
  prompt: '–°–æ–∑–¥–∞–π –ø–æ—Å—Ç –¥–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –æ –Ω–æ–≤–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ',
  templateType: 'VK_POST'
};

console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:');
console.log(JSON.stringify(testData, null, 2));
console.log();

// –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç API
const mockResponse = {
  id: 'test-123',
  text: 'üì± –ü–æ—Å—Ç –¥–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ:\n\n–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—à –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç! üöÄ\n\n–≠—Ç–æ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –¥–æ—Å—Ç–∏—á—å –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç –≤ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ.\n\n#–Ω–æ–≤—ã–π–ø—Ä–æ–¥—É–∫—Ç #–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ #–±–∏–∑–Ω–µ—Å',
  templateType: 'VK_POST',
  timestamp: new Date().toISOString(),
  debug: {
    promptLength: testData.prompt.length,
    textLength: 120,
    isDev: true,
    hasAuth: true
  }
};

console.log('üì• –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç API:');
console.log(JSON.stringify(mockResponse, null, 2));
console.log();

console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
console.log('üí° –ï—Å–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:');
console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)');
console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ (npm run dev)');
console.log('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');
console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
