// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–ª–æ—è –Ω–∞ Vercel
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node test-vercel-deploy.js

const https = require('https');

const testUrl = 'https://your-domain.vercel.app/api/generate';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Vercel –¥–µ–ø–ª–æ—è...');
console.log('URL:', testUrl);

const req = https.get(testUrl, (res) => {
  let data = '';
  
  res.on('data', (chunk) => {
    data += chunk;
  });
  
  res.on('end', () => {
    try {
      const response = JSON.parse(data);
      console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log('–°—Ç–∞—Ç—É—Å:', response.status);
      console.log('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
      Object.entries(response.environment).forEach(([key, value]) => {
        console.log(`  ${key}: ${value}`);
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      const criticalVars = ['YANDEX_API_KEY', 'YANDEX_FOLDER_ID', 'DATABASE_URL', 'JWT_SECRET'];
      const missingVars = criticalVars.filter(varName => 
        response.environment[varName] === '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'
      );
      
      if (missingVars.length > 0) {
        console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:', missingVars.join(', '));
        console.log('–î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables');
      } else {
        console.log('üéâ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞:', error.message);
      console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
    }
  });
});

req.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
  console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞');
});

req.setTimeout(10000, () => {
  console.error('‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞');
  req.destroy();
});
