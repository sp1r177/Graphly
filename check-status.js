// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node check-status.js

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Graphly...\n');

const fs = require('fs');
const path = require('path');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
const filesToCheck = [
  '.env.local',
  'prisma/schema.prisma',
  'prisma/dev.db',
  'src/app/api/generate/route.ts',
  'src/app/api/auth/register/route.ts'
];

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:');
filesToCheck.forEach(file => {
  const exists = fs.existsSync(file);
  console.log(`${exists ? '‚úÖ' : '‚ùå'} ${file}`);
});

console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
const envVars = [
  'DATABASE_URL',
  'JWT_SECRET',
  'YANDEX_API_KEY',
  'YANDEX_FOLDER_ID',
  'NODE_ENV'
];

envVars.forEach(varName => {
  const value = process.env[varName];
  const status = value ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω';
  const preview = value ? (value.length > 20 ? value.substring(0, 20) + '...' : value) : '';
  console.log(`${status} ${varName}: ${preview}`);
});

console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
if (!fs.existsSync('.env.local')) {
  console.log('- –°–æ–∑–¥–∞–π—Ç–µ .env.local –∏–∑ env.local.ready');
}
if (!fs.existsSync('prisma/dev.db')) {
  console.log('- –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npx prisma db push');
}
if (!process.env.JWT_SECRET) {
  console.log('- –î–æ–±–∞–≤—å—Ç–µ JWT_SECRET –≤ .env.local');
}

console.log('\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞: npm run dev');
console.log('üìä –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API: http://localhost:3000/api/generate');
