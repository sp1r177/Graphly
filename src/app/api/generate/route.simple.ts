import { NextRequest, NextResponse } from 'next/server'

export const dynamic = 'force-dynamic'

export async function GET(request: NextRequest) {
  console.log('üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API - GET –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω')

  return NextResponse.json({
    status: 'OK',
    message: '–ü—Ä–æ—Å—Ç–æ–π API —Ä–∞–±–æ—Ç–∞–µ—Ç!',
    timestamp: new Date().toISOString(),
    debug: {
      method: 'GET',
      url: request.url,
      headers: Object.fromEntries(request.headers.entries())
    }
  })
}

export async function POST(request: NextRequest) {
  console.log('üöÄ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API - POST –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω')

  try {
    const body = await request.json()
    console.log('üìù –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', body)

    // –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    const generatedText = generateSimpleContent(body.prompt, body.templateType)

    console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞:', generatedText.length)

    return NextResponse.json({
      id: 'simple-test-' + Date.now(),
      text: generatedText,
      templateType: body.templateType,
      timestamp: new Date().toISOString(),
      debug: {
        receivedPrompt: body.prompt,
        receivedType: body.templateType,
        generatedLength: generatedText.length,
        method: 'POST'
      }
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Å—Ç–æ–º API:', error)

    return NextResponse.json({
      error: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      debug: {
        errorType: error instanceof Error ? error.constructor.name : 'Unknown',
        timestamp: new Date().toISOString()
      }
    }, { status: 500 })
  }
}

function generateSimpleContent(prompt: string, templateType: string): string {
  console.log('üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ç–∏–ø–∞:', templateType)

  const templates = {
    'VK_POST': `üì± –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –ø–æ—Å—Ç:

${prompt}

‚ú® –≠—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ!
#VK #–ø–æ—Å—Ç #–∫–æ–Ω—Ç–µ–Ω—Ç`,

    'TELEGRAM_POST': `üì¢ Telegram –ø–æ—Å—Ç:

${prompt}

üöÄ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
#Telegram #–ø–æ—Å—Ç #–±–æ—Ç`,

    'EMAIL_CAMPAIGN': `üìß Email —Ä–∞—Å—Å—ã–ª–∫–∞:

–¢–µ–º–∞: ${prompt}

–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫!

${prompt}

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–∏—Å—Ç–µ–º–æ–π.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Graphly`,

    'BLOG_ARTICLE': `üìù –°—Ç–∞—Ç—å—è –¥–ª—è –±–ª–æ–≥–∞:

# ${prompt}

## –í–≤–µ–¥–µ–Ω–∏–µ

${prompt}

## –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å

–≠—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è –Ω–∞ —Ç–µ–º—É "${prompt}".

## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ!
`,

    'VIDEO_SCRIPT': `üé¨ –°—Ü–µ–Ω–∞—Ä–∏–π –≤–∏–¥–µ–æ:

–ù–ê–ó–í–ê–ù–ò–ï: ${prompt}

–°–¶–ï–ù–ê 1: –í–≤–µ–¥–µ–Ω–∏–µ
[–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–æ–∫]
–ì–û–õ–û–° –ó–ê –ö–ê–î–†–û–ú: ${prompt}

–°–¶–ï–ù–ê 2: –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å
[–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç]
–ì–û–õ–û–° –ó–ê –ö–ê–î–†–û–ú: –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º —ç—Ç—É —Ç–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ.

–°–¶–ï–ù–ê 3: –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
[–ò—Ç–æ–≥–æ–≤—ã–π —Å–ª–∞–π–¥]
–ì–û–õ–û–° –ó–ê –ö–ê–î–†–û–ú: –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä!
`,

    'IMAGE_GENERATION': `üñºÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:

–û—Å–Ω–æ–≤–Ω–∞—è —Ç–µ–º–∞: ${prompt}

–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç: ${prompt}
- –°—Ç–∏–ª—å: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, —è—Ä–∫–∏–π, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π
- –¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞: –Ø—Ä–∫–∏–µ, –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞
- –ö–æ–º–ø–æ–∑–∏—Ü–∏—è: –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –Ω–∞ —á–∏—Å—Ç–æ–º —Ñ–æ–Ω–µ
- –î–µ—Ç–∞–ª–∏: –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, —á–µ—Ç–∫–∏–µ –ª–∏–Ω–∏–∏, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏–¥

–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${prompt}, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω, –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ`
  }

  const result = templates[templateType as keyof typeof templates] ||
    `üéØ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:

${prompt}

–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${templateType}
–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${new Date().toLocaleString()}`

  console.log('üì§ –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª–∏–Ω–æ–π:', result.length, '—Å–∏–º–≤–æ–ª–æ–≤')
  return result
}
