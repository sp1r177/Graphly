import { NextRequest, NextResponse } from 'next/server'
import { getUserFromRequest } from '@/lib/auth'
import { supabase, getUserProfile, updateUserProfile } from '@/lib/supabase'
import { yandexGPT } from '@/lib/yandex-gpt'
import { createClient } from '@supabase/supabase-js'

export const dynamic = 'force-dynamic'

export async function POST(request: NextRequest) {
  try {
    console.log('=== GENERATE API START ===')
    console.log('Cookies:', request.cookies.getAll().map(c => ({ name: c.name, hasValue: !!c.value })))
    console.log('Auth header:', request.headers.get('authorization') ? 'SET' : 'NOT_SET')

    const { prompt, templateType } = await request.json()
    console.log('Request data:', { prompt: prompt?.substring(0, 50) + '...', templateType })

    if (!prompt || !templateType) {
      return NextResponse.json(
        { error: 'Prompt and template type are required' },
        { status: 400 }
      )
    }

    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ graphly-user-id –∫—É–∫—É
    const userId = request.cookies.get('graphly-user-id')?.value
    console.log('User ID from cookie:', userId)
    
    if (!userId) {
      console.log('=== GENERATE API: NO USER ID IN COOKIE ===')
      return NextResponse.json(
        { error: 'Unauthorized', code: 'NOT_AUTHENTICATED' },
        { status: 401 }
      )
    }

    // –°–æ–∑–¥–∞–µ–º admin-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–º–∏ (–æ–±—Ö–æ–¥–∏—Ç RLS)
    const supabaseUrl = process.env.SUPABASE_URL as string
    const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY as string
    const admin = (supabaseUrl && serviceKey) ? createClient(supabaseUrl, serviceKey) : null
    if (!admin) {
      console.error('Supabase admin client is not configured')
      return NextResponse.json({ error: 'Server configuration error' }, { status: 500 })
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let { data: user, error: userSelectError } = await admin
      .from('user_profiles')
      .select('*')
      .eq('id', userId)
      .single()

    if (userSelectError && userSelectError.code !== 'PGRST116') {
      console.error('Error selecting user profile (admin):', userSelectError)
    }

    if (!user) {
      const upsertPayload = {
        id: userId,
        email: `${userId}@vk.id`,
        subscription_status: 'FREE',
        usage_count_day: 0,
        usage_count_month: 0,
      }
      const { data: created, error: createErr } = await admin
        .from('user_profiles')
        .upsert(upsertPayload)
        .select('*')
        .single()
      if (createErr) {
        console.error('Error creating user profile (admin):', createErr)
        return NextResponse.json({ error: 'User not found' }, { status: 404 })
      }
      user = created as any
    }

    console.log('User profile:', user ? { id: user.id, subscription: user.subscription_status, usage: user.usage_count_day } : 'NULL')

    // Generate content using Yandex GPT
    let generatedText: string
    let tokensUsed: number = 0

    // Check if Yandex GPT is configured
    const yandexApiKey = process.env.YANDEX_API_KEY || process.env.YANDEX_GPT_API_KEY
    const yandexFolderId = process.env.YANDEX_FOLDER_ID || process.env.YANDEX_GPT_FOLDER_ID
    console.log('Yandex GPT env check:', {
      hasApiKey: !!yandexApiKey,
      hasFolderId: !!yandexFolderId,
      model: process.env.YANDEX_GPT_MODEL || 'yandexgpt/latest'
    })

    // –ü—ã—Ç–∞–µ–º—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ Yandex GPT, –ø—Ä–∏ –æ—à–∏–±–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
    if (yandexApiKey && yandexFolderId) {
      try {
        console.log('Starting Yandex GPT generation:', { prompt, templateType })
        const result = await yandexGPT.generateContent(prompt, templateType)
        generatedText = (result.text && result.text.trim().length > 0)
          ? result.text
          : await generateContent(prompt, templateType)
        tokensUsed = result.tokensUsed || 0
        console.log('Yandex GPT generation successful:', { textLength: generatedText.length, tokensUsed })
      } catch (error) {
        console.error('Yandex GPT generation failed, using fallback:', {
          error: error instanceof Error ? error.message : 'Unknown error',
          prompt,
          templateType
        })
        generatedText = await generateContent(prompt, templateType)
        tokensUsed = 100
      }
    } else {
      console.warn('YANDEX_API_KEY or YANDEX_FOLDER_ID missing ‚Üí using fallback generation')
      generatedText = await generateContent(prompt, templateType)
      tokensUsed = 100
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –ü–û–°–õ–ï –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, –Ω–æ –ü–ï–†–ï–î —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    if (user.subscription_status === 'FREE' && (user.usage_count_day || 0) >= 25) {
      console.log('User exceeded limit, returning error without saving')
      return NextResponse.json(
        {
          error: 'Trial limit reached. Upgrade to Pro for unlimited generations.',
          code: 'LIMIT_REACHED',
          remainingTokens: { daily: 0, monthly: -1 }
        },
        { status: 429 }
      )
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏–º (—á–µ—Ä–µ–∑ admin)
    let generation = null
    try {
      console.log('Saving generation to database for user:', user.id)
      const { data: genData, error: generationError } = await admin
        .from('generations')
        .insert({
          user_id: user.id,
        prompt,
          output_text: generatedText,
          template_type: templateType,
          tokens_used: tokensUsed,
        })
        .select()
        .single()

      if (!generationError) {
        generation = genData
        console.log('Generation saved successfully:', generation.id)
      } else {
        console.error('Error saving generation:', generationError)
      }

      // –î–ª—è —Ç—Ä–∏–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º usage_count_day –∫–∞–∫ "–≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ"
      const updatedDay = (user.usage_count_day || 0) + 1
      console.log('Updating user usage count:', { old: user.usage_count_day, new: updatedDay })
      
      const { error: updErr } = await admin
        .from('user_profiles')
        .update({ usage_count_day: updatedDay })
        .eq('id', user.id)
      if (updErr) {
        console.error('Error updating user usage (admin):', updErr)
      } else {
        user.usage_count_day = updatedDay
        console.log('User usage count updated successfully')
      }
    } catch (dbError) {
      console.error('Database error:', dbError)
      // –ù–ï –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –±–∞–∑–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    }

    const response = {
      id: generation?.id || 'temp-' + Date.now(),
      text: generatedText,
      templateType,
      timestamp: generation?.created_at || new Date().toISOString(),
      tokensUsed,
      remainingTokens: {
        daily: user.subscription_status === 'FREE'
          ? Math.max(0, 25 - (user.usage_count_day || 0))
          : -1,
        monthly: -1
      },
      upsell: user.subscription_status === 'FREE' && (user.usage_count_day || 0) >= 25
    }
    
    console.log('=== GENERATE API SUCCESS ===')
    console.log('Response:', { 
      textLength: generatedText.length, 
      tokensUsed, 
      remainingDaily: response.remainingTokens.daily,
      upsell: response.upsell
    })
    
    return NextResponse.json(response)

  } catch (error) {
    console.error('Generation error:', error)
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    )
  }
}

async function generateContent(prompt: string, templateType: string): Promise<string> {
  // Simulate AI generation delay
  await new Promise(resolve => setTimeout(resolve, 2000))
  
  // –°–æ–∑–¥–∞–µ–º —É–º–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞
  const generateSmartContent = (basePrompt: string, type: string) => {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –ø—Ä–æ–º–ø—Ç–∞
    const keywords = basePrompt.toLowerCase().split(' ').filter(word => 
      word.length > 3 && !['–Ω–∞–ø–∏—à–∏', '—Å–æ–∑–¥–∞–π', '—Å–¥–µ–ª–∞–π', '–ø–æ—Å—Ç', '—Å—Ç–∞—Ç—å—é', '–∫–æ–Ω—Ç–µ–Ω—Ç'].includes(word)
    )
    
    // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    const randomVariants = [
      '–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!',
      '–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å!',
      '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å!',
      '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!',
      '–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è!'
    ]
    
    const randomVariant = randomVariants[Math.floor(Math.random() * randomVariants.length)]
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    switch (type) {
      case 'VK_POST':
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –∏ —Å–æ–∑–¥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        const isCoffee = basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') || basePrompt.includes('–∫–æ—Ñ–µ')
        const isKrasnodar = basePrompt.includes('–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä')
        const isSale = basePrompt.includes('–∞–∫—Ü–∏') || basePrompt.includes('—Å–∫–∏–¥–∫')
        const isLatte = basePrompt.includes('–ª–∞—Ç—Ç–µ')
        const isRestaurant = basePrompt.includes('—Ä–µ—Å—Ç–æ—Ä–∞–Ω') || basePrompt.includes('–∫–∞—Ñ–µ')
        
        // –ï—Å–ª–∏ –ø—Ä–æ–º–ø—Ç –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π, —Å–æ–∑–¥–∞–µ–º –±–æ–ª–µ–µ –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        const isShortPrompt = basePrompt.length < 20
        
        let businessType = '–ë–∏–∑–Ω–µ—Å'
        let city = '–≥–æ—Ä–æ–¥–µ'
        let offer = 'üíé –í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã!'
        let description = '–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏!'
        let hashtags = '#–±–∏–∑–Ω–µ—Å #—É—Å–ª—É–≥–∏ #–∫–∞—á–µ—Å—Ç–≤–æ'
        
        if (isCoffee) {
          businessType = '–ö–æ—Ñ–µ–π–Ω—è'
          offer = isLatte ? '‚òï –õ–∞—Ç—Ç–µ –≤—Å–µ–≥–æ –∑–∞ 100 —Ä—É–±–ª–µ–π!' : '‚òï –ê—Ä–æ–º–∞—Ç–Ω—ã–π –∫–æ—Ñ–µ –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º!'
          description = isShortPrompt ? 
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —É—é—Ç–Ω—É—é –∫–æ—Ñ–µ–π–Ω—é! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –∞—Ä–æ–º–∞—Ç–Ω—ã–º –∫–æ—Ñ–µ, —Å–≤–µ–∂–µ–π –≤—ã–ø–µ—á–∫–æ–π –∏ –ø—Ä–∏—è—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π.' :
            '–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ –Ω–∞—à—É —É—é—Ç–Ω—É—é –∫–æ—Ñ–µ–π–Ω—é –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∞—Ä–æ–º–∞—Ç–Ω—ã–º –∫–æ—Ñ–µ!'
          hashtags = '#–∫–æ—Ñ–µ–π–Ω—è #–∫–æ—Ñ–µ #–ª–∞—Ç—Ç–µ #–≤–∫—É—Å–Ω–æ #—É—é—Ç–Ω–æ'
        } else if (isRestaurant) {
          businessType = '–†–µ—Å—Ç–æ—Ä–∞–Ω'
          offer = 'üçΩÔ∏è –í–∫—É—Å–Ω—ã–µ –±–ª—é–¥–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–º!'
          description = isShortPrompt ?
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω! –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –±–ª—é–¥ –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–π –∏ —Ä—É—Å—Å–∫–æ–π –∫—É—Ö–Ω–∏, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –∏–∑ —Å–≤–µ–∂–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤.' :
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω! –ú—ã –≥–æ—Ç–æ–≤–∏–º —Å –ª—é–±–æ–≤—å—é!'
          hashtags = '#—Ä–µ—Å—Ç–æ—Ä–∞–Ω #–µ–¥–∞ #–≤–∫—É—Å–Ω–æ #—É—é—Ç–Ω–æ'
        } else if (isShortPrompt) {
          // –î–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ —Å–æ–∑–¥–∞–µ–º –±–æ–ª–µ–µ –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
          businessType = '–ë–∏–∑–Ω–µ—Å'
          offer = '‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!'
          description = '–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É!'
          hashtags = '#–±–∏–∑–Ω–µ—Å #—É—Å–ª—É–≥–∏ #–∫–∞—á–µ—Å—Ç–≤–æ #–Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å'
        }
        
        if (isKrasnodar) {
          city = '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ'
          hashtags += ' #–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä'
        }
        
        if (isSale) {
          offer = 'üéâ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!'
          hashtags += ' #–∞–∫—Ü–∏—è #—Å–∫–∏–¥–∫–∞'
        }
        
        return `üî• ${businessType} –≤ ${city}

${offer}

${description}

üìç –ê–¥—Ä–µ—Å: —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123
üïí –†–∞–±–æ—Ç–∞–µ–º: 8:00 - 22:00
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX

üí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ –∏ —Ö–µ—à—Ç–µ–≥–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ö–≤–∞—Ç–∞!

${hashtags}`

      case 'TELEGRAM_POST':
        return `üì¢ ${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–ö–æ—Ñ–µ–π–Ω—è' : '–ë–∏–∑–Ω–µ—Å'} –≤ ${basePrompt.includes('–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä') ? '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ' : '–≥–æ—Ä–æ–¥–µ'}

${basePrompt.includes('–∞–∫—Ü–∏') ? 'üéâ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!' : '‚ú® –ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!'}

${basePrompt.includes('–ª–∞—Ç—Ç–µ') ? '‚òï –õ–∞—Ç—Ç–µ –≤—Å–µ–≥–æ –∑–∞ 100 —Ä—É–±–ª–µ–π!' : 'üíé –í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã!'}

${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ –Ω–∞—à—É —É—é—Ç–Ω—É—é –∫–æ—Ñ–µ–π–Ω—é –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∞—Ä–æ–º–∞—Ç–Ω—ã–º –∫–æ—Ñ–µ!' : '–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏!'}

üöÄ Telegram - –∏–¥–µ–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π!

#telegram #–∫–æ—Ñ–µ–π–Ω—è #–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä #–ø–æ—Å—Ç #–∫–æ–Ω—Ç–µ–Ω—Ç #–º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä`

      case 'EMAIL_CAMPAIGN':
        return `üìß Email-—Ä–∞—Å—Å—ã–ª–∫–∞

–¢–µ–º–∞ –ø–∏—Å—å–º–∞: ${basePrompt.includes('–∞–∫—Ü–∏') ? '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!' : '–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!'}

–î–æ—Ä–æ–≥–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏!

${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–∞—Å –≤ –Ω–∞—à—É –∫–æ—Ñ–µ–π–Ω—é!' : '–ú—ã —Ä–∞–¥—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏!'}

${basePrompt.includes('–ª–∞—Ç—Ç–µ') ? '‚òï –õ–∞—Ç—Ç–µ –≤—Å–µ–≥–æ –∑–∞ 100 —Ä—É–±–ª–µ–π!' : 'üíé –í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã!'}

${basePrompt.includes('–∞–∫—Ü–∏') ? '–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º!' : '–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å!'}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ ${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–ö–æ—Ñ–µ–π–Ω–∏' : '–ë–∏–∑–Ω–µ—Å–∞'}

P.S. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏!`

      case 'BLOG_ARTICLE':
        return `üìù –°—Ç–∞—Ç—å—è –¥–ª—è –±–ª–æ–≥–∞

# ${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–ö–æ—Ñ–µ–π–Ω—è –≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ' : '–ë–∏–∑–Ω–µ—Å –≤ –≥–æ—Ä–æ–¥–µ'}

## –í–≤–µ–¥–µ–Ω–∏–µ

${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–ö–æ—Ñ–µ–π–Ω–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤—Å–µ –±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ.' : '–ë–∏–∑–Ω–µ—Å –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞.'}

## –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å

${basePrompt.includes('–∞–∫—Ü–∏') ? '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - —ç—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–∏–≤–ª–µ—á—å –∫–ª–∏–µ–Ω—Ç–æ–≤.' : '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å - –æ—Å–Ω–æ–≤–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞.'}

${basePrompt.includes('–ª–∞—Ç—Ç–µ') ? '–õ–∞—Ç—Ç–µ –∑–∞ 100 —Ä—É–±–ª–µ–π - —ç—Ç–æ –≤—ã–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤.' : '–í–∞–∂–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º —Ç–æ, —á—Ç–æ –∏–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ.'}

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã

1. ${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–°–æ–∑–¥–∞–π—Ç–µ —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É' : '–ò–∑—É—á–∏—Ç–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤'}
2. ${basePrompt.includes('–∞–∫—Ü–∏') ? '–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –≤—ã–≥–æ–¥–Ω—ã–µ –∞–∫—Ü–∏–∏' : '–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å'}
3. ${basePrompt.includes('–ª–∞—Ç—Ç–µ') ? '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å –º–µ–Ω—é' : '–ù–µ –±–æ–π—Ç–µ—Å—å –∏–Ω–Ω–æ–≤–∞—Ü–∏–π'}

## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–ö–æ—Ñ–µ–π–Ω—è - —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –ª—é–¥–∏ –º–æ–≥—É—Ç –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤–∫—É—Å–Ω—ã–º –∫–æ—Ñ–µ.' : '–£—Å–ø–µ—à–Ω—ã–π –±–∏–∑–Ω–µ—Å —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ –≤–Ω–∏–º–∞–Ω–∏–∏ –∫ –¥–µ—Ç–∞–ª—è–º –∏ –∑–∞–±–æ—Ç–µ –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö.'}

---

*–°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é AI–ö–æ–Ω—Ç–µ–Ω—Ç*`

      case 'VIDEO_SCRIPT':
        return `üé¨ –°—Ü–µ–Ω–∞—Ä–∏–π –≤–∏–¥–µ–æ

# ${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–ö–æ—Ñ–µ–π–Ω—è –≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ' : '–ë–∏–∑–Ω–µ—Å –≤ –≥–æ—Ä–æ–¥–µ'}

## –°–¶–ï–ù–ê 1: –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ (0-15 —Å–µ–∫)
"–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! –°–µ–≥–æ–¥–Ω—è –º—ã –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ ${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–∫–æ—Ñ–µ–π–Ω–µ –≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ' : '–±–∏–∑–Ω–µ—Å–µ –≤ –≥–æ—Ä–æ–¥–µ'}."

## –°–¶–ï–ù–ê 2: –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å (15-45 —Å–µ–∫)
"${basePrompt.includes('–∞–∫—Ü–∏') ? '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - —ç—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–∏–≤–ª–µ—á—å –∫–ª–∏–µ–Ω—Ç–æ–≤.' : '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å - –æ—Å–Ω–æ–≤–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞.'}"

## –°–¶–ï–ù–ê 3: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã (45-60 —Å–µ–∫)
"${basePrompt.includes('–ª–∞—Ç—Ç–µ') ? '–õ–∞—Ç—Ç–µ –∑–∞ 100 —Ä—É–±–ª–µ–π - —ç—Ç–æ –≤—ã–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!' : '–í–∞–∂–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º —Ç–æ, —á—Ç–æ –∏–º –Ω—É–∂–Ω–æ!'}"

## –°–¶–ï–ù–ê 4: –ó–∞–∫–ª—é—á–µ–Ω–∏–µ (60-75 —Å–µ–∫)
"–ù–∞–¥–µ—é—Å—å, —ç—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –ø–æ–ª–µ–∑–Ω–∞! –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!"

---
*–°—Ü–µ–Ω–∞—Ä–∏–π —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é AI–ö–æ–Ω—Ç–µ–Ω—Ç*`

      case 'IMAGE_GENERATION':
        return `üñºÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '–£—é—Ç–Ω–∞—è –∫–æ—Ñ–µ–π–Ω—è –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞ —Å –∞—Ä–æ–º–∞—Ç–Ω—ã–º –∫–æ—Ñ–µ –∏ —Ç–µ–ø–ª–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π' : '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–æ–π'}

**–°—Ç–∏–ª—å:** ${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '—É—é—Ç–Ω—ã–π, —Ç–µ–ø–ª—ã–π, –¥–æ–º–∞—à–Ω–∏–π' : '—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π'}
**–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞:** ${basePrompt.includes('–∫–æ—Ñ–µ–π–Ω') ? '—Ç–µ–ø–ª—ã–µ —Ç–æ–Ω–∞: –∫–æ—Ä–∏—á–Ω–µ–≤—ã–π, –±–µ–∂–µ–≤—ã–π, –∑–æ–ª–æ—Ç–æ–π' : '—è—Ä–∫–∏–µ, –ø—Ä–∏–≤–ª–µ–∫–∞—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏–µ —Ü–≤–µ—Ç–∞'}
**–ö–æ–º–ø–æ–∑–∏—Ü–∏—è:** —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è, —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –≥–ª–∞–≤–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ
**–î–µ—Ç–∞–ª–∏:** –≤—ã—Å–æ–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ, —á–µ—Ç–∫–∏–µ –ª–∏–Ω–∏–∏, –ø—Ä–∏—è—Ç–Ω–∞—è —ç—Å—Ç–µ—Ç–∏–∫–∞

*–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é AI–ö–æ–Ω—Ç–µ–Ω—Ç*`
      }
  }
  
  return generateSmartContent(prompt, templateType)
}