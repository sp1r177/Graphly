// –¢–µ—Å—Ç –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const { PrismaClient } = require('@prisma/client')

async function testAfterDBSetup() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–°–õ–ï –ù–ê–°–¢–†–û–ô–ö–ò –ë–î\n')
  console.log('=' .repeat(50))

  const prisma = new PrismaClient()

  try {
    // –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    console.log('üì° –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...')
    await prisma.$connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!\n')

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    console.log('üìã –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü...')

    const userCount = await prisma.user.count()
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount}`)

    const generationCount = await prisma.generation?.count?.() || 0
    console.log(`üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏–π: ${generationCount}`)

    const paymentCount = await prisma.payment?.count?.() || 0
    console.log(`üí≥ –ü–ª–∞—Ç–µ–∂–µ–π: ${paymentCount}`)
    console.log()

    // –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üë§ –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    const timestamp = Date.now()
    const testEmail = `test-${timestamp}@example.com`

    const testUser = await prisma.user.create({
      data: {
        email: testEmail,
        password: '$2a$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewfLkI9QGP4K5qM', // "password123"
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        subscriptionStatus: 'FREE',
        usageCountDay: 0,
        usageCountMonth: 0,
      }
    })

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:')
    console.log('   Email:', testUser.email)
    console.log('   ID:', testUser.id)
    console.log()

    // –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    console.log('ü§ñ –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...')

    const testGeneration = await prisma.generation?.create?.({
      data: {
        userId: testUser.id,
        prompt: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç',
        outputText: '–¢–µ—Å—Ç–æ–≤—ã–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç',
        templateType: 'VK_POST'
      }
    })

    if (testGeneration) {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:')
      console.log('   ID:', testGeneration.id)
      console.log('   –¢–∏–ø:', testGeneration.templateType)
    } else {
      console.log('‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ generations –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
    }
    console.log()

    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('=' .repeat(50))
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:')

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: —Ä–∞–±–æ—Ç–∞–µ—Ç')
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users: –¥–æ—Å—Ç—É–ø–Ω–∞')
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: —Ä–∞–±–æ—Ç–∞–µ—Ç (${userCount + 1} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)`)

    if (testGeneration) {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ generations: –¥–æ—Å—Ç—É–ø–Ω–∞')
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: —Ä–∞–±–æ—Ç–∞–µ—Ç')
    } else {
      console.log('‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ generations: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)')
    }

    console.log('\nüéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!')
    console.log('\nüìã –î–ê–õ–¨–ù–ï–ô–®–ò–ï –®–ê–ì–ò:')
    console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev')
    console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ: test-auth-and-generate.html')
    console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é')
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ –ë–î')

  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error.message)
    console.log('\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:')
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env.local —Ñ–∞–π–ª')
    console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: setup-database.bat')
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DATABASE_URL')
    console.log('4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª')
  } finally {
    await prisma.$disconnect()
  }
}

testAfterDBSetup()
